language: ruby
rvm:
  - 2.4

notifications:
  email: false

# miller needs ubuntu xenial for apt install
before_install:
  - wget https://github.com/johnkerl/miller/releases/download/5.4.0/mlr-5.4.0.tar.gz
  - tar -xzvf mlr-5.4.0.tar.gz
  - pushd mlr-5.4.0 && ./configure --prefix=/usr && make && sudo make install && popd

install:
  - gem install activesupport -v 5.2.3
  - gem install csvlint

script:
  # validate each file against its schema
  # - for FILE in data/*csv; do csvlint --schema=schema.json $FILE; done
  - csvlint data/Act.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Act.json
  - csvlint data/ActType.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/ActType.json
  - csvlint data/ArtForm.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/ArtForm.json
  - csvlint data/ArtWork.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/ArtWork.json
  - csvlint data/Genre.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Genre.json
  - csvlint data/Institution.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Institution.json
  - csvlint data/IsoLangCode.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/IsoLangCode.json
  - csvlint data/Location.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Location.json
  - csvlint data/Membership.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Membership.json
  - csvlint data/Person.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Person.json
  - csvlint data/Place.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Place.json
  - csvlint data/PrimarySource.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/PrimarySource.json
  - csvlint data/Quotation.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/Quotation.json
  - csvlint data/SecondarySource.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/SecondarySource.json
  - csvlint data/SocialPosition.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/SocialPosition.json
  - csvlint data/SocialRelation.csv --schema=https://raw.githubusercontent.com/readchina/csv-schema/master/readingdata/SocialRelation.json

# referential integrity no failures for visual inspection only
# Act
  - mlr --csv join -j agent -r person_id --np --ul -f data/Act.csv then cut -f agent then uniq -a data/Person.csv
  - mlr --csv join -j action -r action_ID --np --ul -f data/Act.csv then cut -f action then uniq -a data/ActType.csv
  # Act_object integrity checks add || true once AW and PS validate
  - mlr --csv join -j act_object -r prim_source_id --np --ul -f data/Act.csv then cut -f act_object then uniq -a data/PrimarySource.csv | grep --color "PS[0-9]*"
  - mlr --csv join -j act_object -r artwork_id --np --ul -f data/Act.csv then cut -f act_object then uniq -a data/ArtWork.csv | grep --color "AW[0-9]*"
  - mlr --csv join -j act_object -r person_id --np --ul -f data/Act.csv then cut -f act_object then uniq -a data/Person.csv | grep --color "P[0-9]+" || true
  - mlr --csv join -j act_object -r genre_id --np --ul -f data/Act.csv then cut -f act_object then uniq -a data/Genre.csv | grep --color "G[0-9]+" || true
  - mlr --csv join -j act_object -r quotation_id --np --ul -f data/Act.csv then cut -f act_object then uniq -a data/Quotation.csv | grep --color "Q[0-9]*" || true



# Artwork
  - mlr --csv join -j person_id --np --ul -f data/ArtWork.csv then cut -f person_id then uniq -a data/Person.csv
  - mlr --csv join -j art_form_id --np --ul -f data/ArtWork.csv then cut -f art_form_id then uniq -a data/ArtForm.csv

# Institution
  - mlr --csv join -j place_id -r place_ID --np --ul -f data/Institution.csv then cut -f place_id then uniq -a data/Place.csv

# Membership
  - mlr --csv join -j inst_ID --np --ul -f data/Membership.csv then cut -f inst_ID then uniq -a data/Institution.csv
  - mlr --csv join -j person_id --np --ul -f data/Membership.csv then cut -f person_id then uniq -a data/Person.csv

# Person
  - mlr --csv join -j place_of_rust -r place_ID --np --ul -f data/Person.csv then cut -f place_of_rust then uniq -a data/Place.csv
  - mlr --csv join -j place_of_birth -r place_ID --np --ul -f data/Person.csv then cut -f place_of_birth then uniq -a data/Place.csv
  - mlr --csv join -j place_of_death -r place_ID --np --ul -f data/Person.csv then cut -f place_of_death then uniq -a data/Place.csv
  - mlr --csv join -j social_position -r soc_pos_id --np --ul -f data/Person.csv then cut -f social_position then uniq -a data/SocialPosition.csv

# PrimarySource
  - mlr --csv join -j person_id --np --ul -f data/PrimarySource.csv then cut -f person_id then uniq -a data/Person.csv
  - mlr --csv join -j genre_id --np --ul -f data/PrimarySource.csv then cut -f genre_id then uniq -a data/Genre.csv
  - mlr --csv join -j publication_place -r place_ID --np --ul -f data/PrimarySource.csv then cut -f publication_place then uniq -a data/Place.csv

# SecondarySource
  - mlr --csv join -j person_id --np --ul -f data/SecondarySource.csv then cut -f person_id then uniq -a data/Person.csv
  - mlr --csv join -j genre_id --np --ul -f data/SecondarySource.csv then cut -f genre_id then uniq -a data/Genre.csv
  - mlr --csv join -j publication_place -r place_ID --np --ul -f data/SecondarySource.csv then cut -f publication_place then uniq -a data/Place.csv

# SocialRelation
  - mlr --csv join -j ego -r person_id --np --ul -f data/SocialRelation.csv then cut -f ego then uniq -a data/Person.csv
  - mlr --csv join -j related -r person_id --np --ul -f data/SocialRelation.csv then cut -f related then uniq -a data/Person.csv
